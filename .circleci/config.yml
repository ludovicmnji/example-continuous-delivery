version: 2

jobs:
  prepare:
    working_directory: ~/example-continuous-delivery
    docker:
      - image: circleci/node:$NODE_VERSION
    steps:
      - checkout
      # - run: cd packages/website
      # - restore_cache:
      #     name: Restore Yarn Package Cache
      #     keys:
      #       - yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      # - run:
      #     name: Install Dependencies
      #     command: yarn install --verbose --frozen-lockfile
      # - save_cache:
      #     name: Save Yarn Package Cache
      #     key: yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      #     paths:
      #       - ~/example-continuous-delivery/.cache/yarn
      - restore_cache:
          name: Restore npm Package Cache
          keys:
            - npm-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "package.json" }}
      - run:
          name: Install Dependencies
          command: npm install --no-package-lock
      - save_cache:
          name: Save npm Package Cache
          key: npm-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "package.json" }}
          paths:
            - ~/example-continuous-delivery/node_modules

  build:
    working_directory: ~/example-continuous-delivery
    docker:
      - image: circleci/node:$NODE_VERSION
    steps:
      - checkout
      # - restore_cache:
      #     name: Restore Yarn Package Cache
      #     keys:
      #       - yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      # - run:
      #     name: Install Dependencies
      #     command: yarn install --verbose --frozen-lockfile
      - restore_cache:
          name: Restore npm Package Cache
          keys:
            - npm-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "package.json" }}
      - run:
          name: Install Dependencies
          command: npm install --no-package-lock
      - run:
          name: Build website
          command: yarn build

  test:
    working_directory: ~/example-continuous-delivery
    docker:
      - image: circleci/node:$NODE_VERSION
    steps:
      - checkout
      # - restore_cache:
      #     name: Restore Yarn Package Cache
      #     keys:
      #       - yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      # - run:
      #     name: Install Dependencies
      #     command: yarn install --verbose --frozen-lockfile
      - restore_cache:
          name: Restore npm Package Cache
          keys:
            - npm-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm install --no-package-lock
      - run:
          name: Running test
          command: yarn test

  deploy-heroku:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2

  deploy:
    jobs:
      - deploy-heroku:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

  # build_and_test:
  #   jobs:
  #     - prepare
  #     - build:
  #         requires:
  #           - prepare
  #     - test:
  #         requires:
  #           - build
