version: 2

jobs:
  prepare:
    working_directory: ~/example-continuous-delivery
    docker:
      - image: circleci/node:$NODE_VERSION
    steps:
      - checkout
      # - restore_cache:
      #     name: Restore Yarn Package Cache
      #     keys:
      #       - yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install Library Dependencies
          command: |
            cd library
            yarn install --frozen-lockfile
      - run:
          name: Install Website Dependencies
          command: |
            cd website
            yarn install --frozen-lockfile
      # - save_cache:
      #     name: Save Yarn Package Cache
      #     key: yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      #     paths:
      #       - ~/example-continuous-delivery/.cache/yarn
      # - restore_cache:
      #     name: Restore npm Package Cache
      #     keys:
      #       - npm-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "package.json" }}
      # - run:
      #     name: Install Dependencies
      #     command: npm install --no-package-lock
      # - save_cache:
      #     name: Save npm Package Cache
      #     key: npm-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "package.json" }}
      #     paths:
      #       - ~/example-continuous-delivery/node_modules
      - persist_to_workspace:
          root: ~/example-continuous-delivery
          paths: .

  build-library:
    working_directory: ~/example-continuous-delivery
    docker:
      - image: circleci/node:$NODE_VERSION
    steps:
      - attach_workspace:
          at: ~/example-continuous-delivery
      - run:
          name: Build library
          command: |
            cd library
            yarn build

  build-website:
    working_directory: ~/example-continuous-delivery
    docker:
      - image: circleci/node:$NODE_VERSION
    steps:
      # - checkout
      # - restore_cache:
      #     name: Restore Yarn Package Cache
      #     keys:
      #       - yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      # - run:
      #     name: Install Dependencies
      #     command: yarn install --verbose --frozen-lockfile
      # - restore_cache:
      #     name: Restore npm Package Cache
      #     keys:
      #       - npm-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "package.json" }}
      # - run:
      #     name: Install Dependencies
      #     command: npm install --no-package-lock
      - attach_workspace:
          at: ~/example-continuous-delivery
      - run:
          name: Build website
          command: |
            cd website
            yarn build

  test-library:
    working_directory: ~/example-continuous-delivery
    docker:
      - image: circleci/node:$NODE_VERSION
    steps:
      # - checkout
      # - restore_cache:
      #     name: Restore Yarn Package Cache
      #     keys:
      #       - yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      # - run:
      #     name: Install Dependencies
      #     command: yarn install --verbose --frozen-lockfile
      # - restore_cache:
      #     name: Restore npm Package Cache
      #     keys:
      #       - npm-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "package-lock.json" }}
      # - run:
      #     name: Install Dependencies
      #     command: npm install --no-package-lock
      - attach_workspace:
          at: ~/example-continuous-delivery
      - run:
          name: Running test
          command: |
            cd library
            yarn test

  publish-on-npm:
    working_directory: ~/example-continuous-delivery
    docker:
      - image: circleci/node:$NODE_VERSION
    steps:
      - attach_workspace:
          at: ~/example-continuous-delivery
      - run:
          name: Publish on npm
          command: |
            cd library
            yarn run publish

  deploy-on-heroku:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2

  build_test:
    jobs:
      - prepare
      - build-library:
          requires:
            - prepare
      - build-website:
          requires:
            - prepare
      - test-library:
          requires:
            - build-library
            - build-website

  build_test_deploy:
    jobs:
      - prepare:
          filters:
            tags:
              only: /^v.*/
            branches:
              only: monorepo
      - build-library:
          requires:
            - prepare
          filters:
            tags:
              only: /^v.*/
            branches:
              only: monorepo
      - build-website:
          requires:
            - prepare
          filters:
            tags:
              only: /^v.*/
            branches:
              only: monorepo
      - test-library:
          requires:
            - build-library
            - build-website
          filters:
            tags:
              only: /^v.*/
            branches:
              only: monorepo
      - publish-on-npm:
          requires:
            - test-library
          filters:
            tags:
              only: /^v.*/
            branches:
              only: monorepo
      - deploy-on-heroku:
          requires:
            - publish-on-npm
          filters:
            tags:
              only: /^v.*/
            branches:
              only: monorepo
